<?xml version="1.0" encoding="UTF-8"?>
<files>
    <% 
    def entityRef = [:]
    mapper.entity.each { entityRef[it.id] = it }
    entityRef.each {
    id, entity ->
    def data   = fn.deduceName(entity.clazz)
    def filter = fn.deduceName(entity.clazz, 'Filter')
    def serv   = fn.deduceName(entity.clazz, 'Serv')
    def attr   = []
    attr.addAll(entity.attributes.id.collect{fn.deduceAttrName(it)})
    attr.addAll(entity.attributes.basic.collect{fn.deduceAttrName(it)})
    attr.addAll(entity.attributes.version.collect{fn.deduceAttrName(it)})
    //attr.addAll(entity.attributes.oneToMany.collect{fn.deduceRefName(it, entityRef)})
    //attr.addAll(entity.attributes.oneToOne.collect{fn.deduceRefName(it, entityRef)})
    //attr.addAll(entity.attributes.manyToOne.collect{fn.deduceRefName(it, entityRef)})
    %>
    <file name="${serv.type}.java" layer="serv" dir="." pkg="${pkg}">
<![CDATA[
import bo.gob.bcb.result.ResultObject;
import bo.gob.bcb.result.ResultVoid;
import bo.gob.bcb.result.ResultList;
import ${pkg}.data.${data.type};
import ${pkg}.data.${filter.type};
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Consumes;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("${data.path}")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public interface ${serv.type} {

  @GET
  @Path("/")
  public ResultVoid ping() ;

  @POST
  @Path("filtrar")
  ResultList<${data.type}> ${data.var}Filtrar(${filter.type} ${filter.var});

  @POST
  @Path("recargar")
  ResultObject<${data.type}> ${data.var}Recargar(${data.type} ${data.var});

  @POST
  @Path("registrar")
  ResultObject<${data.type}> ${data.var}Registrar(${data.type} ${data.var});

  @POST
  @Path("actualizar")
  ResultObject<${data.type}> ${data.var}Actualizar(${data.type} ${data.var});

  @POST
  @Path("eliminar")
  ResultVoid ${data.var}Eliminar(${data.type} ${data.var});
}
]]></file>
    <file name="${data.type}.java" layer="serv:data" dir="." pkg="${pkg}.data">
<![CDATA[
import java.io.Serializable;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
@XmlRootElement
@XmlAccessorType(XmlAccessType.NONE)
public class ${data.type} implements Serializable {
   private static final long serialVersionUID = 1L;
<% attr.each{  %>
   @XmlElement
   private ${it.type} ${it.var};
<% } %>
<% attr.each{  %>
   public ${it.type} ${it.get}(){
     return ${it.var};
   }
   public void ${it.set}(${it.type} ${it.var}){
     this.${it.var} = ${it.var};
   }
<% } %>
}
]]>
    </file>
    <file name="${filter.type}.java" layer="serv:filter" dir="." pkg="${pkg}.data">
<![CDATA[
import java.io.Serializable;
import bo.gob.bcb.filter.Config;
import bo.gob.bcb.filter.FilterElement;
import bo.gob.bcb.filter.FilterAbstract;
import bo.gob.bcb.filter.FilterValue;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;

@XmlRootElement
@XmlAccessorType(XmlAccessType.NONE)
public class ${filter.type} extends FilterAbstract implements Serializable {
   private static final long serialVersionUID = 1L;
<% attr.each{  %>
   @XmlElement
   @FilterElement
   private FilterValue<${it.type}> ${it.var};
<% } %>
<% attr.each{  %>

   public FilterValue<${it.type}> ${it.get}() {
      return ${it.var};
   }

   public void ${it.set}(FilterValue<${it.type}> ${it.var}) {
      this.${it.var} = ${it.var};
   }
<% } %>
}
]]>
    </file>
    <% } %>
</files>
